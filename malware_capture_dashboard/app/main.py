from fastapi import FastAPI, WebSocket
from fastapi.responses import HTMLResponse
from fastapi.templating import Jinja2Templates
from fastapi.staticfiles import StaticFiles
from starlette.requests import Request
from fastapi.responses import HTMLResponse, JSONResponse
import asyncio
import threading
from app.monitor import start_monitoring, malware_records

app = FastAPI()
templates = Jinja2Templates(directory="app/templates")
app.mount("/static", StaticFiles(directory="app/static"), name="static")

@app.get("/", response_class=HTMLResponse)
async def get_dashboard(request: Request):
    return templates.TemplateResponse("dashboard.html", {"request": request, 
            "records": malware_records})

# API endpoint for polling malware records
@app.get("/api/malware-records")
async def get_malware_records():
    return JSONResponse(content=malware_records)

#@app.on_event("startup")
#async def startup_event():
#    start_monitoring()
@app.on_event("startup")
async def startup_event():
    threading.Thread(target=start_monitoring, daemon=True).start()


